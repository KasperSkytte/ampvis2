"Genus" = sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100,
"Species" = sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100,
check.names = FALSE)
stats_df <- c(stats_df)
print.table(stats_df)
stats_df <- data.frame("Kingdom" = sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100,
"Phylum" = sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100,
"Class" = sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100,
"Order" = sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100,
"Family" = sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100,
"Genus" = sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100,
"Species" = sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100,
check.names = FALSE)
stats_df <- c(stats_df) %>% as.character()
print.table(stats_df)
stats_df <- c("Kingdom" = cat(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%"),
"Phylum" = sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100,
"Class" = sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100,
"Order" = sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100,
"Family" = sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100,
"Genus" = sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100,
"Species" = sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100,
check.names = FALSE)
stats_df <- c("Kingdom" = cat(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%"),
"Phylum" = sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100,
"Class" = sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100,
"Order" = sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100,
"Family" = sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100,
"Genus" = sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100,
"Species" = sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100,
check.names = FALSE)
stats_df
stats_df <- c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%"),
"Phylum" = sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100,
"Class" = sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100,
"Order" = sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100,
"Family" = sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100,
"Genus" = sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100,
"Species" = sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100,
check.names = FALSE)
stats_df
stats_df <- c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Phylum" = sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100,
"Class" = sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100,
"Order" = sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100,
"Family" = sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100,
"Genus" = sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100,
"Species" = sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100,
check.names = FALSE)
stats_df
stats_df <- c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Phylum" = paste(sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100, sep = ""),
"Class" = paste(sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100, sep = ""),
"Order" = paste(sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100, sep = ""),
"Family" = paste(sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100, sep = ""),
"Genus" = paste(sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100, sep = ""),
"Species" = paste(sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100, sep = ""),
check.names = FALSE)
stats_df
stats_df <- c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Phylum" = paste(sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100, sep = ""),
"Class" = paste(sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100, sep = ""),
"Order" = paste(sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100, sep = ""),
"Family" = paste(sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100, sep = ""),
"Genus" = paste(sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100, sep = ""),
"Species" = paste(sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100, sep = ""))
print.table(stats_df)
stats_df <- c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Phylum" = paste(sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100, sep = ""),
"Class" = paste(sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100, sep = ""),
"Order" = paste(sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100, sep = ""),
"Family" = paste(sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100, sep = ""),
"Genus" = paste(sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100, sep = ""),
"Species" = paste(sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100, sep = ""))
stats_df
stats_df <- c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Phylum" = paste(sum(nchar(data$tax$Phylum) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Class" = paste(sum(nchar(data$tax$Class) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Order" = paste(sum(nchar(data$tax$Order) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Family" = paste(sum(nchar(data$tax$Family) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Genus" = paste(sum(nchar(data$tax$Genus) > 3) / nrow(data$abund) * 100, "%", sep = ""),
"Species" = paste(sum(nchar(data$tax$Species) > 3) / nrow(data$abund) * 100, "%", sep = ""))
print.table(stats_df)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata
)
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
c("Samples" = ncol(data$abund),
"OTUs" = nrow(data$abund),
"Total#Reads" = sum(data$abund),
"Min#Reads" = min(colSums(data$abund)),
"Avg#Reads" = mean(colSums(data$abund)),
"Max#Reads" = max(colSums(data$abund))) %>% print.table()
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = ""))
class(c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = "")))
source('~/R/GitHub/ampvis2/R/amp_load.R')
class(c("Kingdom" = paste(sum(nchar(data$tax$Kingdom) > 3) / nrow(data$abund) * 100, "%", sep = "")))
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
myotutable <- read.csv2("test/otutable.txt", header = TRUE, stringsAsFactors = FALSE, check.names = FALSE, row.names = 1, sep = "\t")
mymetadata <- read.csv2("test/metadata.txt", header = TRUE, stringsAsFactors = FALSE, check.names = FALSE, row.names = 1, sep = "\t")
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
View(mymetadata)
View(myotutable)
View(mymetadata)
martametadata <- read.csv2("test/metadata.txt", header = TRUE, stringsAsFactors = FALSE, check.names = FALSE, sep = "\t")
martaotutable <- myotutable
d <- amp_load(otutable = myotutable,
metadata = mymetadata)
View(martaotutable)
View(martametadata)
rm(martametadata)
rm(martaotutable)
myotutable <- read.csv2("test/otutable.txt", header = TRUE, stringsAsFactors = FALSE, check.names = FALSE, row.names = 1, sep = "\t")
View(myotutable)
mymetadata <- read_xlsx("test/1501_metatdat.xlsx", header = TRUE)
mymetadata <- read_xlsx("test/1501_metatdat.xlsx", col_names = TRUE)
View(mymetadata)
d <- amp_load(myotutable, mymetadata)
View(mymetadata)
mymetadata <- mymetadata[,c(3,1,2)]
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
d <- amp_load(myotutable, mymetadata)
roxygenise()
devtools::install_github("kasperskytte/ampvis2")
rm(amp_load)
library(ampvis2)
pkgdown::build_site()
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenise(); pkgdown::build_reference()
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenise(); pkgdown::build_reference()
rm(Genus)
rm(Order)
rm(Species)
rm(stats_df)
MiD_metadata <- read_excel("data/MiD_metadata.xlsx", col_names = TRUE)
View(MiD_metadata)
MiD_metadata <- read_excel("data/MiD_metadata.xlsx", col_names = TRUE)
View(MiD_metadata)
MiD_otutable <- read.delim("data/MiD_otutable.txt", header = TRUE, stringsAsFactors = FALSE, check.names = FALSE, row.names = 1)
View(MiD_otutable)
test <- amp_load(MiD_otutable, MiD_metadata)
?print.table
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
View(MiD_metadata)
View(MiD_otutable)
View(MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
test <- amp_load(MiD_otutable, MiD_metadata[1:10])
test <- amp_load(MiD_otutable, MiD_metadata[,1:10])
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
View(test$metadata)
test <- amp_load(MiD_otutable[,1:100], MiD_metadata)
test <- amp_load(MiD_otutable[,20:ncol(MiD_otutable)], MiD_metadata)
test <- amp_load(MiD_otutable[,20:30], MiD_metadata)
test <- amp_load(MiD_otutable[,20:7781], MiD_metadata)
test <- amp_load(MiD_otutable[,7781], MiD_metadata)
test <- amp_load(MiD_otutable[,1:7781], MiD_metadata)
test <- amp_load(MiD_otutable[,1:10], MiD_metadata)
test <- amp_load(MiD_otutable[,1:7781], MiD_metadata)
test <- amp_load(MiD_otutable[,1:7780], MiD_metadata)
test <- amp_load(MiD_otutable[,1:7000], MiD_metadata)
View(MiD_otutable)
test <- amp_load(MiD_otutable[,1:148], MiD_metadata)
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable[,20:148], MiD_metadata)
test <- amp_load(MiD_otutable, MiD_metadata[1:10])
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
test <- amp_load(MiD_otutable, MiD_metadata[,1:10])
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[,1:10])
test <- amp_load(MiD_otutable, MiD_metadata[1:10,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:141,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:141,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:141,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:141,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:11,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:11,])
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(MiD_otutable, MiD_metadata[1:11,])
test <- amp_load(MiD_otutable[,1:10], MiD_metadata)
test <- amp_load(MiD_otutable, MiD_metadata, readDNAStringSet("data/otus.fa"))
test$refseq
test$refseq@metadata
test$refseq@pool
test$refseq@ranges
test$refseq@elementType
test$refseq@elementMetadata
test$refseq@data
test$refseq@metadata
test$refseq@pool
test$refseq@ranges
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenize(); pkgdown::build_reference()
roxygen2::roxygenize(); pkgdown::build_reference()
roxygen2::roxygenize(); pkgdown::build_reference()
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenize(); pkgdown::build_reference()
roxygen2::roxygenize(); pkgdown::build_reference()
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenize(); pkgdown::build_reference()
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenize(); pkgdown::build_reference()
myotutable <- read.delim("data/test/otutable.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = FALSE,
row.names = 1) %>% as.data.frame()
View(myotutable)
mymetadata <- read_excel("data/test/metadata.xlsx",
col_names = TRUE) %>% as.data.frame()
View(mymetadata)
View(MiD_metadata)
View(MiD_otutable)
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenize(); pkgdown::build_reference()
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata, readDNAStringSet("data/otus.fa"))
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata, readDNAStringSet("data/otus.fa"))
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
roxygen2::roxygenize(); pkgdown::build_reference()
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata, readDNAStringSet("data/otus.fa"))
source('~/R/GitHub/ampvis2/R/amp_load.R')
7781*0,7849
7781*0.7849
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata, readDNAStringSet("data/otus.fa"))
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
print.table(c("test"))
print.table(c("test", "test2"))
source('~/R/GitHub/ampvis2/R/amp_load.R')
print.table(c("test", "test2"))
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
source('~/R/GitHub/ampvis2/R/amp_load.R')
test <- amp_load(myotutable, mymetadata)
test2 <- amp_normalise(test)
View(test2$abund)
rm(test2)
amp_rarecurve(test)
?seq_len()
?merge
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
amp_rarecurve(test)
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
amp_rarecurve(test, color_by = "Plant")
amp_rarecurve(AalborgWWTPs)
amp_rarecurve(AalborgWWTPs, color_by = "Plant")
amp_rarecurve(AalborgWWTPs, color_by = "Plant", stepsize = 10)
amp_rarecurve(AalborgWWTPs, color_by = "Plant", stepsize = 10000)
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
amp_rarecurve(AalborgWWTPs, color_by = "Plant", stepsize = 100000)
amp_rarecurve(AalborgWWTPs, color_by = "Plant", stepsize = 100)
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
source('~/R/GitHub/ampvis2/R/amp_rarecurve.R')
amp_rarecurve(AalborgWWTPs, color_by = "Plant", stepsize = 100)
amp_rarecurve(AalborgWWTPs, color_by = "Plant", stepsize = 1000)
amp_rankabundance(AalborgWWTPs)
?apply
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
?apply
amp_rankabundance(AalborgWWTPs)
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
amp_rankabundance(AalborgWWTPs)
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
amp_rankabundance(AalborgWWTPs)
amp_rankabundance(AalborgWWTPs) + theme(legend.position = "blank")
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
source('~/R/GitHub/ampvis2/R/amp_rankabundance.R')
?amp_test_species
amp_venn(AalborgWWTPs)
amp_venn(AalborgWWTPs, group = "Plant")
amp_test_species(AalborgWWTPs, group = "Plant")
source('~/R/GitHub/ampvis2/R/amp_test_species.R')
amp_test_species(AalborgWWTPs, group = "Plant")
test <- amp_test_species(amp_subset_samples(AalborgWWTPs, Year %in% c("2012")), group = "Plant")
data("MiD")
test <- amp_test_species(d, group = "Plant")
test <- amp_test_species(amp_subset_samples(AalborgWWTPs, Year %in% c("2012")), group = "Plant")
test$plot_MA
test$plot_sig
test <- amp_test_species(amp_subset_samples(AalborgWWTPs, Year %in% c("2012")), group = "Plant", tax_aggregate = "Genus")
test$DESeq2_results
test$DESeq2_results_significant
test$Clean_results
test$sig_res_plot_data
source('~/R/GitHub/ampvis2/R/amp_test_species.R')
source('~/R/GitHub/ampvis2/R/amp_test_species.R')
source('~/R/GitHub/ampvis2/R/amp_test_species.R')
source('~/R/GitHub/ampvis2/R/amp_test_species.R')
test <- amp_test_species(amp_subset_samples(AalborgWWTPs, Year %in% c("2012")), group = "Plant", tax_aggregate = "Genus")
test <- amp_test_species(amp_subset_samples(AalborgWWTPs, Year %in% c("2012")), group = "Plant", plot_type = "boxplot")
test$plot_MA
test$plot_sig
roxygenise()
data("data/AalborgWWTPs.RData")
data("AalborgWWTPs")
devtools::install_github("kasperskytte/ampvis2")
library(ampvis2)
roxygen2::roxygenize()
pkgdown::build_site(preview = T)
roxygen2::roxygenise(); pkgdown::build_site(preview = T)
roxygen2::roxygenise(); pkgdown::build_site(preview = T)
amp_core(AalborgWWTPs)
library(data.table)
amp_core(AalborgWWTPs)
?amp_core
amp_boxplot(AalborgWWTPs)
?datatable
?data.table
amp_frequency(AalborgWWTPs)
