pkgdown::build_site(preview = TRUE)
devtools::install_github("KasperSkytte/ampvis2")
library("ampvis2", lib.loc="~/R/win-library/3.4")
library(ampvis2)
pkgdown::build_site()
library(ampvis2)
pkgdown::build_site()
data("MiD")
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East") & !SeqID %in% c("16SAMP-749"), minreads = 20000)
amp_heatmap(ds, group = "Plant")
library(data.table)
amp_heatmap(ds, group = "Plant")
amp_heatmap(d, group = "Plant")
load("~/R/GitHub/ampvis2/data/MiDAS_1.20.RData")
d <- amp_load(otutable, metadata)
amp_heatmap(d, group = "Plant")
amp_heatmap(d, group = "Plant")
library(ampvis2)
amp_heatmap(d, group = "Plant")
library(DT)
install.packages(DT)
install.packages("DT")
library(DT)
amp_heatmap(d, group = "Plant")
library(data.table)
amp_heatmap(d, group = "Plant")
data("MiD")
amp_heatmap(d, group = "Plant")
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East"))
amp_heatmap(d, group = "Plant")
library(ampvis2)
data("MiD")
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East"))
amp_heatmap(ds, group = "Plant")
View(ds$abund)
ncol(ds$abund)
ncol(d$abund)
nrow(d$abund)
nrow(ds$abund)
nrow(ds$metadata)
nrow(d$metadata)
View(ds$metadata)
amp_heatmap(ds)
amp_heatmap(ds, group = "Plant")
amp_heatmap(d, group = "Plant")
amp_heatmap(ds, group = "Plant")
#' Subset data based on metadata.
#'
#' Subset data based on metadata.
#'
#' @usage amp_subset_samples(data, ...)
#'
#' @param data (required) A object.
#' @param minreads (optional) Minimum number of reads pr. sample (default: 1).
#' @param ... (optional) Additional data is passed on to the R subset function. The samples can be subset based on any variable in the associated metadata.
#'
#' @return A phyloseq object.
#'
#' @export
#'
#' @author Mads Albertsen \email{MadsAlbertsen85@@gmail.com}
amp_subset_samples <- function(data, ..., minreads = 1) {
#Check the data first
if(!is.list(data) |
!any(names(data) == "abund") |
!any(names(data) == "tax") |
!any(names(data) == "metadata") |
!is.data.frame(data[["abund"]]) |
!is.data.frame(data[["tax"]]) |
!is.data.frame(data[["metadata"]])
) {
stop("The data must be a list with three dataframes named abund, tax and metadata")
}
if (minreads > max(colSums(data$abund))) {
stop(paste("Cannot subset samples with minimum", minreads, "total reads, when highest number of reads in any sample is", max(colSums(data$abund))))
}
#For printing number of removed samples
nsamplesbefore <- nrow(d$metadata) %>% as.numeric()
#Subset metadata based on ...
data$metadata <- subset(data$metadata, ...)
data$metadata <- droplevels(data$metadata)
#And only keep columns in otutable that match the rows in the subsetted metadata
data$abund <- data$abund[, rownames(data$metadata), drop = FALSE]
#After subsetting the samples, remove OTU's that could possibly have 0 reads in all samples, and remove samples below the minreads
data$abund <- data$abund[rowSums(data$abund) > 0, colSums(data$abund) >= minreads, drop = FALSE]
#Subset the metadata again to match any removed sample(s)
data$metadata <- data$metadata[colnames(data$abund), , drop = FALSE]
#Subset taxonomy, and refseq if any, based on abund
data$tax <- data$tax[rownames(data$abund), ]
if(any(names(data) == "refseq")){
data$refseq <- data$refseq[names(data$refseq) %in% rownames(data$abund), ]
}
#Print number of removed samples
nsamplesafter <- as.numeric(nrow(data$metadata))
if (nsamplesbefore == nsamplesafter) {
print("0 samples have been filtered.")
} else {
cat(paste(nsamplesbefore-nsamplesafter, "samples have been filtered \nBefore:", nsamplesbefore, "samples\nAfter:", nsamplesafter, "samples"))
}
return(data)
}
data("MiD")
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East"))
amp_heatmap(ds, group = "Plant")
View(d$abund)
source('~/R/GitHub/ampvis2/R/amp_subset_samples.R')
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East") & !SeqID %in% c("16SAMP-749"), minreads = 20000)
ds <- amp_subset_samples(d, Plant == c("Aalborg West", "Aalborg East") & !SeqID %in% c("16SAMP-749"), minreads = 20000)
?%in%
?in
?all
?match
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East") & !SeqID %in% c("16SAMP-749"), minreads = 20000)
myotutable <- read.csv2("../data/otutable.csv",
#sep = "\t",
#dec = ".",
header = TRUE,
stringsAsFactors = FALSE,
check.names = FALSE,
row.names = 1) %>% as.data.frame()
amp_ordinate(ds, sample_color = "Plant")
amp_ordinate(ds, sample_color = "Plant", transform = "sqrt")
amp_ordinate(ds, sample_color = "Plant", transform = "hellinger")
amp_ordinate(ds, sample_color = "Plant", type = "cca")
amp_ordinate(ds, sample_color = "Plant", type = "ca")
amp_ordinate(ds, sample_color = "Plant", type = "ca", transform = "hellinger")
amp_ordinate(ds, sample_color = "Plant", transform = "hellinger")
View(ds$abund)
View(ds$tax$OTU[1:5])
ds$tax$OTU[1:5]
rm(amp_subset_samples)
rm(ds)
source('~/R/GitHub/ampvis2/R/amp_subset_taxa.R')
source('~/R/GitHub/ampvis2/R/amp_subset_samples.R')
pkgdown::build_site(preview = TRUE)
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25)
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East"))
ds <- amp_subset_samples(d, Plant %in% c("Aalborg West", "Aalborg East") & !SeqID %in% c("16SAMP-749"), minreads = 20000)
amp_heatmap(ds, group = "Plant")
load("~/R/GitHub/ampvis2/.RData")
library(ampvis2)
amp_heatmap(ds, group = "Plant")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25)
?amp_heatmap
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE)
amp_heatmap(ds, group = "Plant", tax.aggregate = "Genus")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) + thene(legend.position = "blank")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) + theme(legend.position = "blank")
amp_heatmap(ds, group = "Plant")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE)
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=12),
axis.text.y=element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=12, hjust = 1),
axis.text.y=element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=12, vjust = 1),
axis.text.y=element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y=element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="bottom")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "orange"),
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.colorscale = "log10",
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.colorscale = "sqrt",
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.colorscale = "log10",
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.colorscale = "log10",
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right") + ggtitle("test")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.colorscale = "log10",
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right") + ggtitle("Aalborg East and West 2006-2013")
amp_heatmap(ds,
group = c("Plant", "Year"),
tax.aggregate = "Genus",
tax.add = "Phylum",
tax.show = 25,
color.vector = c("white", "red"),
plot.colorscale = "log10",
plot.numbers = FALSE) +
theme(axis.text.x = element_text(angle = 45, size=10, vjust = 1),
axis.text.y = element_text(size=10),
legend.position="right")
amp_heatmap(ds, group = "Plant") + theme_classic()
amp_heatmap(ds, group = "Plant") + theme_minimal()
amp_heatmap(ds, group = "Plant", plot.theme = "clean")
amp_heatmap(ds, group = "Plant")
amp_rankabundance(ds)
amp_rankabundance(ds, group = "Plant")
amp_rarecurve(ds)
amp_boxplot(ds)
amp_boxplot(ds, tax.show = 10)
amp_boxplot(ds, tax.show = 20)
amp_boxplot(ds,
tax.show = 20,raw = T
)
amp_boxplot(ds,
tax.show = 20)
amp_boxplot(ds,
tax.show = 20,
tax.add = "Phylum")
amp_boxplot(ds,
tax.show = 20,
tax.add = "Phylum",
group = "Plant")
amp_boxplot(ds,
tax.show = 10,
tax.add = "Phylum",
group = "Plant")
amp_boxplot(ds,
group = "Plant",
tax.show = 10,
tax.add = "Phylum")
pkgdown::build_site(preview = TRUE)
amp_boxplot(ds)
