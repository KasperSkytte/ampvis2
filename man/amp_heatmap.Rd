% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amp_heatmap.R
\name{amp_heatmap}
\alias{amp_heatmap}
\title{Heatmap}
\usage{
amp_heatmap(
  data,
  group_by = NULL,
  facet_by = NULL,
  normalise = TRUE,
  tax_aggregate = "Phylum",
  tax_add = NULL,
  tax_show = 10,
  showRemainingTaxa = FALSE,
  tax_class = NULL,
  tax_empty = "best",
  order_x_by = NULL,
  order_y_by = NULL,
  plot_values = TRUE,
  plot_values_size = 4,
  plot_legendbreaks = NULL,
  plot_colorscale = "log10",
  plot_na = TRUE,
  measure = "mean",
  min_abundance = 0.1,
  max_abundance = NULL,
  sort_by = NULL,
  normalise_by = NULL,
  scale_by = NULL,
  color_vector = NULL,
  round = 1,
  textmap = FALSE,
  plot_functions = FALSE,
  function_data = NULL,
  functions = c("MiDAS", "Filamentous", "AOB", "NOB", "PAO", "GAO"),
  rel_widths = c(0.75, 0.25)
)
}
\arguments{
\item{data}{(\emph{required}) Data list as loaded with \code{\link{amp_load}}.}

\item{group_by}{(\emph{recommended}) Group the samples by a categorical variable in the metadata. If \code{NULL} then all samples are shown.}

\item{facet_by}{Facet the samples by a categorical variable in the metadata.}

\item{normalise}{(\emph{logical}) Transform the OTU read counts to be in percent per sample. (\emph{default:} \code{TRUE})}

\item{tax_aggregate}{The taxonomic level to aggregate the OTUs. (\emph{default:} \code{"Phylum"})}

\item{tax_add}{Additional taxonomic level(s) to display, e.g. \code{"Phylum"}. (\emph{default:} \code{"none"})}

\item{tax_show}{The number of taxa to show, or a vector of taxa names. (\emph{default:} \code{10})}

\item{showRemainingTaxa}{Add an additional row at the bottom displaying the sum of all remaining taxa that are not part of the top \code{tax_show} most abundant taxa. (\emph{default:} \code{FALSE})}

\item{tax_class}{Converts a specific phylum to class level instead, e.g. \code{"p__Proteobacteria"}.}

\item{tax_empty}{How to show OTUs without taxonomic information. One of the following:
\itemize{
   \item \code{"remove"}: Remove OTUs without taxonomic information.
   \item \code{"best"}: (\emph{default}) Use the best classification possible.
   \item \code{"OTU"}: Display the OTU name.
   }}

\item{order_x_by}{Reorder the x axis by providing a character vector of the x axis values in the desired order, or \code{"cluster"} for hierarchical clustering by \code{\link[stats]{hclust}}.}

\item{order_y_by}{Reorder the y axis by providing a character vector of the y axis values in the desired order, or \code{"cluster"} for hierarchical clustering by \code{\link[stats]{hclust}}.}

\item{plot_values}{(\emph{logical}) Plot the values on the heatmap or not. (\emph{default:} \code{TRUE})}

\item{plot_values_size}{The size of the plotted values. (\emph{default:} \code{4})}

\item{plot_legendbreaks}{A vector of breaks for the abundance legend, fx \code{c(1, 10, 20)}.}

\item{plot_colorscale}{The type of scale used for the coloring of abundances, either \code{"sqrt"} or \code{"log10"}. (\emph{default:} \code{"log10"})}

\item{plot_na}{(\emph{logical}) Whether to color missing values with the lowest color in the scale or not. (\emph{default:} \code{TRUE})}

\item{measure}{Calculate and display either \code{"mean"}, \code{"max"} or \code{"median"} across the groups. (\emph{default:} \code{"mean"})}

\item{min_abundance}{All values below this value are given the same color. (\emph{default:} \code{0.1})}

\item{max_abundance}{All values above this value are given the same color.}

\item{sort_by}{Sorts the heatmap by the most abundant taxa in a specific sample or group of samples. Provide a sample name or a specific value of the group defined by the \code{"group_by"} argument, e.g. \code{"Treatment A"}.}

\item{normalise_by}{A variable or a specific sample in the metadata to normalise the counts by.}

\item{scale_by}{Scale the abundances by a variable in the metadata.}

\item{color_vector}{Vector of colors for the colorscale, e.g. \code{c("white", "red")}.}

\item{round}{Number of digits to show with the values. (\emph{default:} \code{1})}

\item{textmap}{(\emph{logical}) Return a data frame to print as raw text instead of a ggplot2 object. (\emph{default:} \code{FALSE})}

\item{plot_functions}{Return a 2-column grid plot instead, showing known functional information about the Genus-level OTUs next to the heatmap. By default, this functional information is retrieved directly from \url{midasfieldguide.org}. When using this feature, make sure that either \code{tax_aggregate} or \code{tax_add} is set to "Genus" and that Genus is the lowest level in either. (\emph{default:} \code{FALSE})}

\item{function_data}{If \code{plot_functions} is set to \code{TRUE}: A data frame with functional information at Genus level. The first column must be the Genus names and any other column(s) can be any property or metabolic function of the individual Genera. If \code{NULL} then data will be retrieved directly from \url{midasfieldguide.org}. (\emph{default:} \code{NULL})}

\item{functions}{If \code{plot_functions} is set to \code{TRUE}: A vector with the functions to be displayed (column names in the \code{functions_data} data frame). If data is succesfully retrieved from \url{midasfieldguide.org} then available functions can be listed with \code{colnames(.ampvis2_midasfg_function_data)}. (\emph{default:} \code{c("MiDAS","Filamentous", "AOB", "NOB", "PAO", "GAO")})}

\item{rel_widths}{If \code{plot_functions} is set to \code{TRUE}: A vector with the relative widths of the heatmap and function grid when \code{plot_functions = TRUE}. (\emph{default:} \code{c(0.75, 0.25)})}
}
\value{
A ggplot2 object, or a list of ggplot2 objects if \code{plot_functions = TRUE}. A data frame if \code{textmap = TRUE}.
}
\description{
Generates a heatmap of amplicon data by using sample metadata to aggregate samples and taxonomy to aggregate OTUs.
}
\section{Preserving relative abundances in a subset of larger data}{

By default the raw read counts in the abundance matrix are normalised (transformed to percentages) by some plotting functions automatically (for example \code{\link{amp_heatmap}}, \code{\link{amp_timeseries}}, and more). This means that the relative abundances shown will be calculated based on the remaining taxa after the subset, not including the removed taxa, if any. To circumvent this, set \code{normalise = TRUE} when subsetting with the \code{\link{amp_subset_taxa}} and \code{\link{amp_subset_samples}} functions, and then set \code{normalise = FALSE} in the plotting function. This will transform the OTU counts to relative abundances BEFORE the subset, and setting \code{normalise = FALSE} will skip the transformation in the plotting function, see the example below.

\preformatted{
data("MiDAS")
subsettedData <- amp_subset_samples(MiDAS,
                                    Plant \%in\% c("Aalborg West", "Aalborg East"),
                                    normalise = TRUE
                                    )
amp_heatmap(subsettedData,
            group_by = "Plant",
            tax_aggregate = "Phylum",
            tax_add = "Genus",
            normalise = FALSE
            )
}
}

\section{Saving plot with \code{\link[ggplot2]{ggsave}}}{

When \code{plot_functions = TRUE} a list of ggplot objects is returned to allow adjusting themes etc. of the individual subplots. The list is of class \code{hmfunplot} and a matching print function for the S3 class then stitches together the individual plots using the \href{https://patchwork.data-imaginist.com/}{patchwork} package. Therefore to save the plot with \code{\link[ggplot2]{ggsave}} simply pass on the plot object explicitly and wrap it in print(), see examples. This is not necessary if \code{plot_functions = FALSE}, as the returned object is then a regular ggplot object.
}

\section{Accessing detailed raw data}{

The complete raw data used to generate any ggplot can always be accessed with \code{ggplot2_object$data} when the plot is saved as a ggplot2 object. Additionally, a "textmap" version of the generated heatmap can also be generated by setting \code{textmap = TRUE} to only extract the raw data as shown on the particular heatmap, see examples.
}

\examples{
# Load example data
data("AalborgWWTPs")

# Heatmap grouped by WWTP
amp_heatmap(AalborgWWTPs, group_by = "Plant")

# Heatmap of 20 most abundant Genera (by mean) grouped by WWTP, split by Year,
# values not plotted for visibility, phylum name added, colorscale adjusted manually,
# and show the sum of remaining taxa not part of the top 20 most abundant taxa
amp_heatmap(AalborgWWTPs,
  group_by = "Plant",
  facet_by = "Year",
  plot_values = FALSE,
  tax_show = 20,
  showRemainingTaxa = TRUE,
  tax_aggregate = "Genus",
  tax_add = "Phylum",
  color_vector = c("white", "red"),
  plot_colorscale = "sqrt",
  plot_legendbreaks = c(1, 5, 10)
)

# Heatmap with known functional information about the Genera shown to the right
# By default this information is retrieved directly from midasfieldguide.org
# but you can provide your own with the function_data argument as shown in the
# textmap
heatmapwfunctions <- amp_heatmap(AalborgWWTPs,
  group_by = "Plant",
  tax_aggregate = "Genus",
  plot_functions = TRUE,
  functions = c("PAO", "GAO", "AOB", "NOB")
)

class(heatmapwfunctions)

# To save the plot with ggsave() wrap the plot object in print()
# ggsave("plot.png", print(heatmapwfunctions))

# A raw text version of the heatmap can be printed or saved as a data frame with textmap = TRUE.
textmap <- amp_heatmap(AalborgWWTPs,
  group_by = "Plant",
  tax_aggregate = "Genus",
  plot_functions = TRUE,
  function_data = NULL,
  functions = c("PAO", "GAO", "AOB", "NOB"),
  textmap = TRUE
)
textmap
}
\seealso{
\code{\link{amp_load}}
}
\author{
Kasper Skytte Andersen \email{ksa@bio.aau.dk}

Mads Albertsen \email{MadsAlbertsen85@gmail.com}
}
