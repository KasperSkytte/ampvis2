% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amp_subset_taxa.R
\name{amp_subset_taxa}
\alias{amp_subset_taxa}
\title{Subset ampvis2 objects based on taxonomy}
\usage{
amp_subset_taxa(data, tax_vector = NULL, normalise = FALSE, remove = FALSE)
}
\arguments{
\item{data}{(\emph{required}) Data list as loaded with \code{\link{amp_load}}.}

\item{tax_vector}{A character vector with the exact names of taxa to keep. This vector is matched as-is on all taxonomic ranks, so remember to use prefixes if used in your taxonomy, e.g. \code{c("p__Chloroflexi","p__Actinobacteria")}. (\emph{default:} \code{NULL})}

\item{normalise}{(\emph{logical}) Normalise the OTU read counts to 100 (ie percent) per sample \emph{BEFORE} the subset. (\emph{default:} \code{FALSE})}

\item{remove}{(\emph{logical}) If set to TRUE, then the taxa matching the provided vector will be removed instead of being the only ones kept in the data. (\emph{default:} \code{FALSE})}
}
\value{
A modifed ampvis2 object
}
\description{
Subsets the data in ampvis2 objects based on taxonomy and returns the subsetted object.
}
\details{
The taxonomy subset is done by providing a \code{tax_vector} of taxa names which are then matched to the taxonomy table, where all other taxa not matching the \code{tax_vector} are removed. If \code{remove = TRUE}, then the matching taxa are the ones being removed instead. The taxa names in \code{tax_vector} will be matched in all columns of the taxonomy table.
}
\section{Preserving relative abundances in a subset of larger data}{

By default the raw read counts in the abundance matrix are normalised (transformed to percentages) by some plotting functions automatically (for example \code{\link{amp_heatmap}}, \code{\link{amp_timeseries}}, and more). This means that the relative abundances shown will be calculated based on the remaining taxa after the subset, not including the removed taxa, if any. To circumvent this, set \code{normalise = TRUE} when subsetting with the \code{\link{amp_subset_taxa}} and \code{\link{amp_subset_samples}} functions, and then set \code{raw = TRUE} in the plotting function. This will transform the OTU counts to relative abundances BEFORE the subset, and setting \code{raw = TRUE} will skip the transformation in the plotting function, see the example below.

\preformatted{
data("MiDAS")
subsettedData <- amp_subset_samples(MiDAS,
                                    Plant \%in\% c("Aalborg West", "Aalborg East"),
                                    normalise = TRUE
                                    )
amp_heatmap(subsettedData,
            group_by = "Plant",
            tax_aggregate = "Phylum",
            tax_add = "Genus",
            normalise = FALSE
            )
}
}

\examples{
# Load example data
data("AalborgWWTPs")

# An overview heatmap of the data:
amp_heatmap(AalborgWWTPs,
  tax_aggregate = "Genus",
  group_by = "Plant",
  tax_add = "Phylum"
)

# Remove all taxa except the phyla Chloroflexi and Actinobacteria
# and the Genera Rhodoferax and Trichococcus:
tax_vector <- c(
  "p__Chloroflexi",
  "p__Actinobacteria",
  "g__Rhodoferax",
  "g__Trichococcus"
)

AalborgWWTPs_subset <- amp_subset_taxa(AalborgWWTPs,
  tax_vector = tax_vector
)

# The resulting subset:
amp_heatmap(AalborgWWTPs_subset,
  tax_aggregate = "Genus",
  group_by = "Plant",
  tax_add = "Phylum"
)

# Or if remove = TRUE then the taxa in tax_vector are the ones being removed:
AalborgWWTPs_subset <- amp_subset_taxa(AalborgWWTPs,
  tax_vector = tax_vector,
  remove = TRUE
)
# The resulting subset:
amp_heatmap(AalborgWWTPs_subset,
  tax_aggregate = "Genus",
  group_by = "Plant",
  tax_add = "Phylum"
)
}
\seealso{
\code{\link{amp_load}}, \code{\link{amp_subset_samples}}
}
\author{
Kasper Skytte Andersen \email{ksa@bio.aau.dk}

Mads Albertsen \email{MadsAlbertsen85@gmail.com}

Rasmus Hansen Kirkegaard \email{rhk@bio.aau.dk}
}
